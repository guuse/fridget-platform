version: '3.5'

volumes:
    mysql:
    composer:
        external: ${COMPOSER_VOLUME_EXTERNAL:-true}
    docker-sync:
        name: ${COMPOSE_PROJECT_NAME}-sync
        external: ${APP_VOLUME_EXTERNAL:-false}

services:
    app:
        container_name: ${COMPOSE_PROJECT_NAME}
        build:
            dockerfile: docker-resources/Dockerfile
            context: .
        environment:
            COMPOSER_ALLOW_SUPERUSER: 1
            COMPOSER_MEMORY_LIMIT: 6G
            COMPOSER_CACHE_DIR: /root/.composer/cache
            PHP_HTML_ERRORS: 'On'
            PHP_DISPLAY_ERRORS: 'On'
            PHP_DISPLAY_STARTUP_ERRORS: 'On'
            APP_ENV: dev
            APP_DEBUG: 1
        ports:
            - ${EXTERNAL_PORT:-80}:80
        volumes:
            - .:/app:cached
            - composer:/root/.composer
            - vendor
            - var/cache
            - var/log
            - var/sessions
            - var/indexes
        depends_on:
            - mysql-service
            - redis
        env_file:
            - .env

    mysql-service:
        image: mysql/mysql-server:5.7
        container_name: ${COMPOSE_PROJECT_NAME}-mysql
        command: mysqld --user=root --verbose --sql-mode=""
        volumes:
            - mysql:/var/lib/mysql:rw,delegated
        env_file:
            - .env

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:4.8
        container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
        links:
            - mysql-service:db
        ports:
            - ${EXTERNAL_PMA_PORT:-8081}:80

    redis:
        image: redis:latest
        container_name: ${COMPOSE_PROJECT_NAME}-redis

    node:
        image: node:10
        container_name: ${COMPOSE_PROJECT_NAME}-node
        user: node
        working_dir: /home/node/app
        environment:
            - NODE_ENV=dev
        volumes:
            - ./:/home/node/app
        command: npm run watch
